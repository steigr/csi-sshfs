ARG GOLANG_VERSION=1.21.6
ARG ALPINE_VERSION=3.19.0
FROM golang:${GOLANG_VERSION}-alpine AS golang
FROM library/alpine:${ALPINE_VERSION} AS alpine

FROM golang AS build-env
RUN apk add --no-cache git
RUN go get github.com/go-delve/delve/cmd/dlv

ENV CGO_ENABLED=0
WORKDIR /go/src/github.com/steigr/csi-sshfs

COPY go.mod .
COPY go.sum .
RUN go mod download -x
COPY cmd/ cmd/
COPY pkg/ pkg/
RUN go get ./...
RUN go vet ./...
RUN go test -v ./...

RUN BUILD_TIME=$(date -R) \
 && go build -o /bin/csi-sshfs -ldflags "-X 'github.com/steigr/csi-sshfs/pkg/sshfs.BuildTime=${BUILD_TIME}'" -gcflags "all=-N -l" github.com/steigr/csi-sshfs/cmd/csi-sshfs \


FROM alpine:latest
EXPOSE 40000
RUN apk add --no-cache ca-certificates sshfs findmnt libc6-compat

COPY --from=build-env /bin/csi-sshfs /bin/csi-sshfs
COPY --from=build-env /go/bin/dlv /

ENTRYPOINT ["/dlv", "--listen=:40000", "--headless=true", "--api-version=2", "exec", "/bin/csi-sshfs", "--"]
CMD [""]
